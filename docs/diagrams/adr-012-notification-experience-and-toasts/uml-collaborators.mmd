```mermaid
classDiagram
    class NotificationManager {
        +notify(event)
        +notifyAsync(promise, messages)
    }
    class ToastNotificationCoordinator {
        +shouldDisplay(event)
        +showToast(payload)
        +recordDismissal(event)
    }
    class SonnerAdapter {
        +renderSuccess(payload)
        +renderError(payload)
        +renderInfo(payload)
    }
    class NovuNotificationPublisher {
        +send(event)
        +sendAsync(event, result)
    }
    class NovuClientAdapter {
        +triggerWorkflow(key, payload)
    }
    class DismissalRepository {
        +hasSeen(digest)
        +store(digest)
    }
    NotificationManager --> ToastNotificationCoordinator
    NotificationManager --> NovuNotificationPublisher
    ToastNotificationCoordinator --> SonnerAdapter
    ToastNotificationCoordinator --> DismissalRepository
    NovuNotificationPublisher --> NovuClientAdapter
```
